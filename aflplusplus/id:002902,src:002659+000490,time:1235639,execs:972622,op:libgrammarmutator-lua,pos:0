debug = function() end
if {match=(nil)} then local io, b, utf8, table, c, c, os, math, package, a = [[a]]; utf8(( function () ( function (d, c) function getinfo () local b = (nil); local table, a, c, c, utf8, table, e = function (e, e, package) ( (false) )[[]]; for debug=( not (nil)), [[]], (nil) do repeat function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; d"";  until (os); break;  end; return self, ((0xB));  end; end;  end ){};  end )({}, (false)), (-[[.]]));  end; 