debug = function() end
while (((nil)==d)) do local c = (a or self); return [[$]], (-[[/]]), ((9.54e-926)-((false) and ((nil)))), (((#(895e-5))));  end; repeat if (nil) then if "" then e = (true), ( (nil) ) : codes(a, ...), function () ( (false) )();  end;  else ( [[]] )[[]];  end;  else function tointeger (...) a{}; do d"";  end; if e then ( c ){};  end; d{}; math""; end; local table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, table, utf8 = (("")); if "" then b(c, a); return c, (nil);  end; break;  end;  until (((false))); do function getenv (...) ( ... ) : setuservalue(); if (false) then local table = ([[]]), (nil); local b = (true), (0xcF); while ({}) do d = (e""^[[	0/./]]);  end;  end; while ({}) do local io, d = (nil); e, b, c = a : G("", ({})); for utf8=( ... )(), ((""%(0xDEC))<...), function () if b then b{};  end; a : G(); return function (d) a();  end;  end do c : io""; c : flush((d)); d = b; a();  end; return ( function () e : G();  end )([[]]), (3.2e0);  end; b, a = (a); do local d = c; return os;  end; break; end;  end; b, b = ((a-c)=="\f$$"); self : upper(((true))); table = ((-...)>=...); return "\aa.$"; 