debug = function() end
( function (d) ( function (d) if (((true)) or [[]]) then function charpattern () function gsub () package, d = (-("")), ""; end; local a, d = c, d; c = (nil); end; return ( function () local c = utf8, b, (nil); function pairs (...) ( function () ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; ( function () c{a};  end ){}; function io:close (...) if ({}%...) then io = (#b), ...; debug, e = (c==(true)); os = {d};  else e[[\xA	. \r	/]];  end; return (70), utf8 : sqrt((true)), (0); end;  end ) : format[[/]]; local b = [[]], (false), ((nil)); end; return ((false)), ((7.8e-74));  end )([[]]);  end;  end )({});  end )(); 