debug = function() end
( function (e, string, ...) e""; e{}; return function (...) local utf8, a, b, package, self = utf8(); if "" then e : preload();  end; ( function (debug, c, ...) do if function (e, ...) e, package = (true); if ((#...)>(((nil)>function () a = os; d(((false)<(true)), [[$$]]);  end)^(false))) then local utf8, package = (false), function () do b, debug = (-e);  end;  end, function () c{{}};  end, {c}, io; return (true);  else if a then e();  else c = c; a = {}; return ...;  end; local d, table = ((0xEeE)/(false));  end;  end then e, debug = (nil), e : string[[]]; return ...;  end; return (function (...) if (... and (nil)) then while ((-{})) do c : debug((true), {});  end; local os = (e .. {[{[({})]=(true),[{}]=table,e,e,""}]=(a),upper=(...)});  end; string = "/.	$a"; c = (self and (true));  end), ({{e},[(b)]=(function (os) package, io, table, io, os = (nil);  end)}), (true);  end;  end ) : clock{}; math, utf8 = "", (false);  end;  end ){}; 