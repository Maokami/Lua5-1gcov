debug = function() end
( function (a, math, a, ...) ( function () ( function (a, math, self, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function () d = b; ( function (a, math, self, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function (a, e, ...) ( function (a, math, self, ...) ( function () d = b; ( function () ( function (c, a, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (b, c, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function (a, e, ...) ( function (a, math, self, ...) ( function () d = b; ( function (string, utf8, os, ...) ( function (c, a, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (b, c, ...) string{};  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (c, e, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (c, a, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(9.35e23)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; do debug, string, table = ..., function () b = (false), {[(0xd9)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(4.09e48)}; end; return (0x9);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((23e-4)); return (function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=function () b = (false), {[(0xa5)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(9.42e25)}; end; return (0x9);  end)))) do if ... then local package, utf8 = ...; for b=(table<=[[]]), ..., ... do string = ((73e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; if ... then if ... then if function (...) while ((false)) do e(); d{"",e}; local a = e;  end;  end then if (true) then if ... then local b, c = ((false)^(function (d) a = (c); e = a, a; return (1e5), e;  end)); break;  else if self then e{}; return e;  end; if ((nil)<c) then if {b} then e(); break;  end;  else d(); break;  end;  end;  end; break;  else if b then table[[]]; function io:getregistry (self) function a:offset (...) d : loadfile[[/.]]; return ((true)%[[]]); end; function a:offset (...) d : loadfile[[$]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[/]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[0]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[/]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; if b then table[[]]; function io:getregistry (self) function a:offset (...) d : loadfile[[/.]]; return ((true)%[[]]); end; function a:offset (...) d : loadfile[[$]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[/]]; return ((true)%[[]]); end; function string.wrap () ( (0e-2) ){[(true)]=(#(false))}; if {(nil)} then b, d = table : lines();  end; e : G(a, c); self = c; ( {} ) : modf{packsize=(true),(true),(043.598e-6264)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[{(nil),(-( function (...) for self=[[]], (string), (#(((((((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end))-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end))-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end))-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end))-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=(io-[[]]),select=(true)})}]=(io-[[]]),select=(true)})}})); end; function a:offset (...) e : loadfile[[0]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[/]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; if "" then e"";  end; end; break;  end; if "" then e"";  end; end; break;  end; if [[]] then while (d"") do a(a); function d:os (a) e{}; self, package, io = (( c ) : os(...)); break; end;  end;  end;  end;  else a{};  end; e{};  end;  end; return c;  end ){})}}));  end}; end; return c;  end)))) do a{};  end; return c;  end/e);  end;  end; e();  end; return c;  end ){})}}));  end; d();  end;  end; math : loaded[[]]; local d = ( ((-(debug and [[]])) and string()) ) : modf[[]]; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (c, a, ...) string();  end ){};  end ){}; ( function (string, os, ...) ( function (a, b, ...) string{};  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (a, e, ...) string();  end ){};  end ){}; ( function (string, utf8, e, ...) ( function (c, a, ...) string();  end ){};  end ){}; os = a;  end )();  end )();  end ){};  end ){}; os = a;  end )();  end ){}; os = a;  end )"";  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (c, a, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (b, a, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (c, b, ...) string();  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (d, e, ...) string();  end ){};  end ){}; ( function (string, os, ...) ( function (a, b, ...) string{};  end ){};  end ){}; ( function (string, utf8, os, ...) ( function (d, a, ...) string();  end ){};  end ){}; ( function (string, utf8, e, ...) ( function (c, e, ...) string();  end ){};  end ){}; os = a;  end )();  end )();  end ){};  end ){}; os = a;  end )();  end ){}; os = a;  end )();  end ){}; os = a;  end )();  end ){}; os = a;  end ){};  end ){}; os = a;  end )();  end ){}; os = a;  end )();  end ){};  end )();  end ){}; 