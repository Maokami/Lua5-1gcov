debug = function() end
local c = ( not (true)), (0xebeaeFf); for table=(#(c or math" ")), (false), "" do ( {} ) : close{((io{}))}; local c, b, self, package = os, function (...) math(); return (0x5dF7);  end; function G () a""; end; function self.stdin (e, self, ...) b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; b, os = {(#(-e))}; while ((a or [[$]])) do utf8 = (nil), (7);  end; local os, math, d = (false), (false); end; break;  end; while ((false)) do if function () table, math, table, c, math = {};  end then ( utf8 ){[(#(false))]=(0xE)}; return (0xFaFe);  end;  end; 